<?xml version="1.0" encoding="UTF-8" ?>
<testsuite tests="436" failures="0" name="javaslang.collection.LinkedHashSetTest" time="0.071" errors="0" skipped="0">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-oracle/jre/lib/amd64"/>
    <property name="java.vm.version" value="25.151-b12"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="/home/travis/build/rafaresearch/vavr"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/home/travis/build/rafaresearch/vavr"/>
    <property name="java.runtime.version" value="1.8.0_151-b12"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-oracle/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/usr/local/maven-3.5.2/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="maven.conf" value="/usr/local/maven-3.5.2/conf"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="4.4.0-101-generic"/>
    <property name="library.jansi.path" value="/usr/local/maven-3.5.2/lib/jansi-native"/>
    <property name="user.home" value="/home/travis"/>
    <property name="user.timezone" value="UTC"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="user.name" value="travis"/>
    <property name="java.class.path" value="/usr/local/maven-3.5.2/boot/plexus-classworlds-2.5.2.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/lib/jvm/java-8-oracle/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher package"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_151"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/usr/local/maven-3.5.2"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldKeepOrder" time="0.002"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldRemoveElement" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCalculateDifference" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCalculateIntersect" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldBeAwareOfExistingNonUniqueElement" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldMapDistinctElementsToOneElement" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldRemoveAllElements" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldReplaceFirstOccurrenceOfNonNilUsingCurrNewWhenMultipleOccurrencesExist" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldAddAllOfIterable" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCalculateUnion" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateRangeClosedByWhereFromAndToEqualMAX_VALUE" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldProhibitDoubleRangeByStepEqualNaN" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateRangeClosedByWhereFromIsLessThanToAndStepCorrectDirection" time="0.002"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateRangeClosedWhereFromIsLessThanTo" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateRangeClosedByWhereFromEqualsTo" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateRangeClosedWhereFromIsGreaterThanTo" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateRangeClosedByWhereFromAndToEqualMIN_VALUE" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateRangeWhereFromIsLessThanTo" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateRangeByWhereFromEqualsTo" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldProhibitDoubleRangeClosedByFromEqualNaN" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldProhibitLongRangeClosedByStepZero" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldProhibitIntRangeClosedByStepZero" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldProhibitDoubleRangeClosedByToEqualsNaN" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldProhibitDoubleRangeByFromEqualNaN" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateRangeByWhereFromAndToEqualMAX_VALUE" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateRangeClosedWhereFromAndToEqualMAX_VALUE" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldProhibitDoubleRangeByStepZero" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldProhibitIntRangeByStepZero" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateRangeWhereFromEqualsTo" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldProhibitDoubleRangeByToEqualsNaN" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateRangeWhereFromIsGreaterThanTo" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldProhibitCharRangeByStepZero" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldProhibitLongRangeByStepZero" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateRangeByWhereFromIsGreaterThanToAndStepWrongDirection" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldProhibitDoubleRangeClosedByStepZero" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateDoubleRangeClosedByFromInfinity" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateRangeByWhereFromAndToEqualMIN_VALUE" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateRangeClosedWhereFromAndToEqualMIN_VALUE" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateDoubleRangeByFromInfinity" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateRangeClosedByWhereFromIsGreaterThanToAndStepWrongDirection" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateRangeClosedWhereFromEqualsTo" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldProhibitCharRangeClosedByStepZero" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateRangeByWhereFromIsLessThanToAndStepCorrectDirection" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateRangeWhereFromAndToEqualMAX_VALUE" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateDoubleRangeClosedByFromMaxToInfinity" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateRangeByWithBigStep" time="0.007"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateDoubleRangeByFromMaxToInfinity" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateRangeWhereFromAndToEqualMIN_VALUE" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldProhibitDoubleRangeClosedByStepEqualNaN" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenTailOnNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldZipAllNils" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldDropUntilNoneIfPredicateIsTrue" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenMaxByFunctionOfNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldSplitNonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeAverageOfFloat" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeAverageOfShort" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateListOfPrimitiveIntArray" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenMaxByOfNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldSpanNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldReplaceAllElementsOfNonNilUsingCurrNonExistingNew" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldReduceRightNonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldSlide4ElementsBySize5AndStep3" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldFindFirstOfNonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldScanWithNonComparable" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldScanRightNonEmpty" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldSerializeDeserializeNonNil" time="0.003"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldTabulateTheSeqWith0Elements" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldScanLeftWithNonComparable" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateListOfPrimitiveCharArray" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldDropWhileAllIfPredicateIsTrue" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeSumOfBigDecimal" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateListOfPrimitiveDoubleArray" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeMaxOfByte" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeMaxOfChar" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeMaxOfLong" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeMaxOfBoolean" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldHaveSizedSpliterator" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldDropRightAllIfCountExceedsSize" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCountWhenSomeSatisfyThePredicate" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldMkStringNonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldHaveImmutableSpliterator" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenGroupedWithSizeZero" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldRecognizeNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldFullyIterateNonNil" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeMaxOfInt" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenSlidingNonNilByNegativeSize" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeLengthOfNonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldZipNilWithIndex" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenFoldRightNullOperator" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenMinByWithNullComparator" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldScanRightWithNonComparable" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCalculateDifferentHashCodesForDifferentTraversables" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCountWhenAllSatisfyThePredicate" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldReturnSomeHeadWhenCallingHeadOptionOnNonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldTabulateTheSeqCallingTheFunctionInTheRightOrder" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldNonNilNotEqualsNull" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldClearNonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeSumOfBigInteger" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldTakeRightAllIfCountExceedsSize" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldReduceRightOptionNonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldTakeRightAsExpectedIfCountIsLessThanSize" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertNonNilToArrayList" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldReturnHeadOfNonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenFoldLeftNullOperator" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateListOfPrimitiveBooleanArray" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldGroupedTraversableWithRemainder" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldUnzip3NonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldDropNoneIfCountIsNegative" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCalculateHashCodeOfNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldGroupedWhenTraversableLengthIsSmallerThanBlockSize" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldReturnNoneWhenComputingMaxOfNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeMinOfBoolean" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldNilGroupBy" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldNotHasNextWhenNilIterator" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldBeAwareOfExistingUniqueElement" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertNilToHashMap" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertNilToHashSet" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldRecognizeNonEqualityOfTraversablesOfSameSize" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldFoldRightNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateListOfPrimitiveByteArray" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldReplaceAllElementsOfNilUsingCurrNew" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldPartitionIntsInOddAndEvenHavingOddAndEvenNumbers" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldDropAsExpectedIfCountIsLessThanSize" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCalculateMinByOfInts" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldPartitionIntsInOddAndEvenHavingOnlyEvenNumbers" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeMinOfByte" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeMinOfChar" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeMinOfLong" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldUnzipNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldReplaceElementOfNilUsingCurrNew" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenGroupedWithNegativeSize" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldWriteToStderr" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldWriteToStdout" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldSlide5ElementsBySize2AndStep3" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldSlide5ElementsBySize2AndStep4" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldSlide5ElementsBySize2AndStep5" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldMkStringWithDelimiterNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldZipAllNonEmptyAndNil" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldDropRightNoneIfCountIsNegative" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertNonNilToJavaArray" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenReduceNullOperator" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeMinOfBigDecimal" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowOnNextWhenNilIterator" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenMaxByWithNullFunction" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeDistinctByOfNonEmptyTraversableUsingKeyExtractor" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldDropRightNoneOnNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldPreserveSingletonInstanceOnDeserialization" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldFoldLeftNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenReduceLeftNullOperator" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenSlidingNilByPositiveStepAndNegativeSize" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldReplaceAllElementsOfNonNilUsingCurrNew" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenComputingSumOfStrings" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldZipNonNilsOfSameSize" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldTakeNoneOnNil" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldTakeRightNoneIfCountIsNegative" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldReturnSomethingOnHasDefiniteSize" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldFoldMapNonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldSpanNonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldReturnNoneWhenCallingHeadOptionOnNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldHandleStdoutIOException" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldGroupedTraversableWithEqualSizedBlocks" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeAverageOfDouble" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldReturnSomeInitWhenCallingInitOptionOnNonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldSlideNilBySizeAndStep" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeMinOfDouble" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeSumOfByte" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeSumOfLong" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldReturnSomeTailWhenCallingTailOptionOnNonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCalculateInverseMinByFunctionOfInts" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeMinOfBigInteger" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenReduceOptionNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldClearNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldEmptyNotEqualsDifferentType" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldReturnLastOfNonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCalculateInverseMaxByFunctionOfInts" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateListOfIterable" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldZipNils" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldTakeWhileNoneOnNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCalculateMaxByOfInts" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowIfZipWithThatIsNull" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenMaxByWithNullComparator" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeDistinctByOfEmptyTraversableUsingKeyExtractor" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldMkStringWithDelimiterNonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldZipAllEmptyAndNonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldGroupedNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldDropRightAsExpectedIfCountIsLessThanSize" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldNonNilGroupByEqual" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldTabulateTheSeqWith0ElementsWhenNIsNegative" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldHandlePrintStreamIOException" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldReturnSizeWhenSpliterator" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldMkStringWithDelimiterAndPrefixAndSuffixNonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldFillTheSeqWith0Elements" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldTakeUntilAllOnFalseCondition" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldReplaceElementOfNonNilUsingCurrNewWhenOneOccurrenceExists" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenLastOnNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldRecognizeNonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldReturnTailOfNonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenReduceNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldReduceLeftNonNil" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldMkStringNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldRecognizeEqualityOfNonNils" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldRetainAllElementsFromNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldScanLeftEmpty" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldTakeUntilAsExpected" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenReduceRightNullOperator" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldReturnNoneWhenCallingLastOptionOnNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldTakeUntilNoneOnNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeMinOfFloat" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeProductOfDouble" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeMinOfShort" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeProductOfFloat" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldRecognizeNonNilDoesContainElement" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateListOfPrimitiveShortArray" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenMinByWithNullFunction" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeProductOfShort" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCalculateMinByFunctionOfInts" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldUnzipNonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldZipAllNonNilsIfThisIsSmaller" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCalculateMaxByFunctionOfInts" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="ofAllShouldReturnTheSingletonEmpty" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateSeqOfSeqUsingCons" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldRecognizeNonEqualityOfTraversablesOfDifferentSize" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="ofShouldReturnTheSingletonEmpty" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldReturnSomethingOnIsTraversableAgain" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeMaxOfDouble" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeDistinctOfNonEmptyTraversable" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldTakeWhileAllOnTrueCondition" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldDropWhileCorrect" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateInstanceOfElements" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldSlideNilBySize" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeMaxOfBigDecimal" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeProductOfInt" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeProductOfNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldScanNonEmpty" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldTakeAllIfCountExceedsSize" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldTakeUntilAllOnTrueCondition" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldUnzip3Nil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenMinByOfNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeDistinctByOfNonEmptyTraversableUsingComparator" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldDropUntilCorrect" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldParallelStreamAndCollectNonNil" time="0.002"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCalculateInverseMinByOfInts" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeAverageOfByte" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeAverageOfLong" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldReturnNoneWhenCallingInitOptionOnNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldZipNonNilsIfThisIsSmaller" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeAverageOfBigDecimal" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCallMinFunctionOncePerElement" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeSumOfInt" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeSumOfNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldZipNonEmptyAndNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldReturnNoneWhenComputingAverageOfNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeAverageOfInt" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeMaxOfStrings" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCallMaxFunctionOncePerElement" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenPartitionNilAndPredicateIsNull" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldFindLastOfNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertNonNilToHashMap" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertNonNilToHashSet" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldStreamAndCollectNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeMaxOfBigInteger" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldReduceLeftOptionNonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeDistinctOfEmptyTraversable" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenReduceOptionNullOperator" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldEqualSameTraversableInstance" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldTakeWhileAsExpected" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenReduceLeftOptionNullOperator" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldTabulateTheSeq" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenReduceLeftOptionNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldHandleStderrIOException" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeMinOfInt" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeAverageOfBigInteger" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenMinByFunctionOfNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldReplaceElementOfNonNilUsingCurrNewWhenNoOccurrenceExists" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldSerializeDeserializeNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenSlidingNilByNegativeStepAndPositiveSize" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenSlidingNilByZeroSize" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeDistinctByOfEmptyTraversableUsingComparator" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateListOfPrimitiveLongArray" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldTakeWhileAllOnFalseCondition" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldNonNilGroupByIdentity" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldReduceOptionNonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldScanLeftNonEmpty" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeMinOfStrings" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldGetInitOfNonNil" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenReduceRightNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldRecognizeNonNilDoesNotContainElement" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldZipEmptyAndNonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldRecognizeNonNilNotContainsAllOverlappingElements" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCalculateInverseMaxByOfInts" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldReturnNoneWhenCallingTailOptionOnNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCalculateHashCodeOfNonNil" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeSumOfDouble" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldRecognizeEqualityOfNils" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldFillTheSeqWith0ElementsWhenNIsNegative" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenSlidingNilByNegativeStepAndNegativeSize" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldZipAllNonNilsOfSameSize" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenComputingAverageOfStrings" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldFoldMapFailNullMapper" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldSplitNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldRetainAllElementsFromNonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldFoldMapFailNullMonoid" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldTakeNoneIfCountIsNegative" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldReturnNoneWhenComputingMinOfNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldFoldMapNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldReturnSomeLastWhenCallingLastOptionOnNonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeSumOfFloat" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldHaveOrderedSpliterator" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeSumOfShort" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldDropNoneOnNil" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldRecognizeNilContainsNoElement" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldFoldRightNonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldNotRetainAllNonExistingElementsFromNonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldZipNonNilWithIndex" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldTakeAsExpectedIfCountIsLessThanSize" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldNilNotEqualsNull" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldRecognizeNilNotContainsAllElements" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldScanEmpty" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertNilToArrayList" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldStreamAndCollectNonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldZipAllNonNilsIfThatIsSmaller" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenReduceRightOptionNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeLengthOfNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldTakeRightNoneOnNil" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldBeAwareOfNonExistingUniqueElement" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeProductOfBigDecimal" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldReduceNonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldDropWhileNoneOnNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldParallelStreamAndCollectNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenSlidingNonNilByZeroSize" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldHandlePrintWriterIOException" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldZipNonNilsIfThatIsSmaller" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowIfZipAllWithThatIsNull" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenReduceRightOptionNullOperator" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldNonEmptyNotEqualsDifferentType" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldRetainAllExistingElementsFromNonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCreateListOfPrimitiveFloatArray" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldFindFirstOfNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldPartitionIntsInOddAndEvenHavingOnlyOddNumbers" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenReduceLeftNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldIterateFirstElementOfNonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCountWhenIsEmpty" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeMaxOfFloat" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeMaxOfShort" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenInitOfNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldScanRightEmpty" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldDropWhileNoneIfPredicateIsFalse" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldRecognizeNonNilContainsAllOnSelf" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenComputingProductOfStrings" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenHeadOnNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldWriteToPrintStream" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertNilToJavaArray" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldFindLastOfNonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldFoldLeftNonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldFoldMultipleElements" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldDropUntilNoneOnNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeProductOfBigInteger" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeProductOfByte" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldComputeProductOfLong" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldDropUntilAllIfPredicateIsFalse" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldFillTheSeqCallingTheSupplierInTheRightOrder" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldPartitionNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCountWhenNoneSatisfiesThePredicate" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldWriteToPrintWriter" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenSlidingNilByNegativeSize" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldDropAllIfCountExceedsSize" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldSlideNonNilBySize1" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldSlideNonNilBySize2" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldMkStringWithDelimiterAndPrefixAndSuffixNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldGetOptionNonEmpty" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldBeAwareOfPropertyThatHoldsForAll" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCorresponds" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowIfEmpty" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCalculateValIfEmpty" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldBeAwareOfExistingElement" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertToMap" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertToSet" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldNotThrowIfNonEmpty" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCalculateValIfDefined" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertToOption" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertToCharSeq" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldBeAwareOfNonExistingElement" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertEmptyToTry" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertToStream" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCalculateIsDefined" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertToVector" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertNonEmptyValueToMatchMonad" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertToEitherRightFromValue" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertToJavaList" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCalculateSupplierIfDefined" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldFilterNotEmptyTraversable" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertToEitherLeftFromValue" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldPeekNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldFoldNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldBeAwareOfPropertyThatNotHoldsForAll" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldGetNonEmpty" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldFilterNonEmptyTraversable" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldFilterNonEmptyTraversableAllMatch" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCalculateIsEmpty" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenFoldNullOperator" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldPeekNonNilPerformingAnAction" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldFilterNotNonEmptyTraversable" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertToArray" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertToQueue" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertToStack" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldntCorrespondsNonNilNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCalculateOrElseGet" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldReturnUnderlyingValueWhenCallingOrElseTryOnNonEmptyValue" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCalculateSupplierIfEmpty" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertToJavaMap" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertToJavaSet" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertToLazy" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertToList" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertToJavaArray" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldFilterNotNonEmptyTraversableAllMatch" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldFoldSingleElement" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertToEitherRightFromValueSupplier" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldntCorrespondsNilNonNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldGetEmpty" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldFilterEmptyTraversable" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldThrowWhenCallingOrElseTryOnEmptyValueAndTryIsAFailure" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertNonEmptyToTryUsingExceptionSupplier" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldntCorrespondsNilNil" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldReturnAlternateValueWhenCallingOrElseTryOnEmptyValue" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertNonEmptyToTry" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertToJavaStream" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldCalculateOrElse" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldntCorrespondsDifferentLengths" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertEmptyToTryUsingExceptionSupplier" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldPeekSingleValuePerformingAnAction" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertEmptyValueToMatchMonad" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldPeekNonNilPerformingNoAction" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertToJavaOptional" time="0.001"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldGetOptionEmpty" time="0"/>
  <testcase classname="javaslang.collection.LinkedHashSetTest" name="shouldConvertToEitherLeftFromValueSupplier" time="0"/>
</testsuite>
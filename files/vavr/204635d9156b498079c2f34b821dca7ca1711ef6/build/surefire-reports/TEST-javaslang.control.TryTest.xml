<?xml version="1.0" encoding="UTF-8" ?>
<testsuite tests="107" failures="0" name="javaslang.control.TryTest" time="0.1" errors="0" skipped="0">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-oracle/jre/lib/amd64"/>
    <property name="java.vm.version" value="25.151-b12"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="/home/travis/build/rafaresearch/vavr"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/home/travis/build/rafaresearch/vavr"/>
    <property name="java.runtime.version" value="1.8.0_151-b12"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-oracle/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/usr/local/maven-3.5.2/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="maven.conf" value="/usr/local/maven-3.5.2/conf"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="4.4.0-101-generic"/>
    <property name="library.jansi.path" value="/usr/local/maven-3.5.2/lib/jansi-native"/>
    <property name="user.home" value="/home/travis"/>
    <property name="user.timezone" value="UTC"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="user.name" value="travis"/>
    <property name="java.class.path" value="/usr/local/maven-3.5.2/boot/plexus-classworlds-2.5.2.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/lib/jvm/java-8-oracle/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher package"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_151"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/usr/local/maven-3.5.2"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase classname="javaslang.control.TryTest" name="shouldComposeSuccessWithAndThenWhenSucceeding" time="0.003"/>
  <testcase classname="javaslang.control.TryTest" name="shouldMapOnFailure" time="0.01"/>
  <testcase classname="javaslang.control.TryTest" name="shouldCreateFailureWhenCallingTryRunRunnable" time="0.005"/>
  <testcase classname="javaslang.control.TryTest" name="shouldNotHoldPropertyForAllOfFailure" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldSerializeDeserializeSuccess" time="0.001"/>
  <testcase classname="javaslang.control.TryTest" name="shouldPeekSuccessAndThrow" time="0.001"/>
  <testcase classname="javaslang.control.TryTest" name="shouldChainSuccessWithMapTry" time="0.01"/>
  <testcase classname="javaslang.control.TryTest" name="shouldConvertSuccessToJavaOptional" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldNotHoldPropertyExistsOfFailure" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldFlatMapOnSuccess" time="0.001"/>
  <testcase classname="javaslang.control.TryTest" name="shouldCreateFailureWhenCallingTryOfSupplier" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldNotEqualFailureIfObjectIsOfDifferentType" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldFilterMatchingPredicateOnFailure" time="0.001"/>
  <testcase classname="javaslang.control.TryTest" name="shouldFlatMapOnIterable" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldPeekFailure" time="0.001"/>
  <testcase classname="javaslang.control.TryTest" name="shouldChainFailureWithMapTry" time="0.002"/>
  <testcase classname="javaslang.control.TryTest" name="shouldDetectNonFatalException" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldDetectNonFailureOnSuccess" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldReturnToStringOnNonFatal" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldConvertFailureToEither" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldDetectFailureOnNonFatalException" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldSerializeDeserializeFailure" time="0.016"/>
  <testcase classname="javaslang.control.TryTest" name="shouldConvertFailureToOption" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldFlatMapOnFailure" time="0.001"/>
  <testcase classname="javaslang.control.TryTest" name="shouldEqualSuccess" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldDetectFatalException" time="0.004"/>
  <testcase classname="javaslang.control.TryTest" name="shouldConvertFailureToString" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldBeAwareOfPropertyThatNotHoldsForAllOfSuccess" time="0.001"/>
  <testcase classname="javaslang.control.TryTest" name="shouldConvertSuccessToEither" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldConvertFailureToJavaOptional" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldEqualSuccessIfObjectIsSame" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldBeAwareOfPropertyThatNotHoldsExistsOfSuccess" time="0.001"/>
  <testcase classname="javaslang.control.TryTest" name="shouldFlatMapWithExceptionOnSuccess" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldBeAwareOfPropertyThatHoldsForAllOfSuccess" time="0.001"/>
  <testcase classname="javaslang.control.TryTest" name="shouldHashSuccess" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldConvertSuccessToOption" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldCreateSuccessWhenCallingTryRunRunnable" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldFilterWithExceptionOnSuccess" time="0.001"/>
  <testcase classname="javaslang.control.TryTest" name="shouldNotEqualSuccessIfObjectIsNull" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldBeAwareOfPropertyThatHoldsExistsOfSuccess" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldConvertSuccessToString" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldFlatMapTryOnFailure" time="0.001"/>
  <testcase classname="javaslang.control.TryTest" name="shouldReturnEqualsOnFatal" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldRecoverWithThrowingOnFailure" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldCreateSuccessWhenCallingTryOfSupplier" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldFlatMapOnEmptyIterable" time="0.001"/>
  <testcase classname="javaslang.control.TryTest" name="shouldRecoverWithOnSuccess" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldEqualFailure" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldReturnHasCodeOnNonFatal" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldNotEqualSuccessIfObjectIsOfDifferentType" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldConvertListOfFailureToTryOfList" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldForEachOnSuccess" time="0.004"/>
  <testcase classname="javaslang.control.TryTest" name="shouldCreateIdentityCheckedFunction" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldChainConsumableFailureWithAndThen" time="0.002"/>
  <testcase classname="javaslang.control.TryTest" name="shouldMapWithExceptionOnSuccess" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldRunElseWhenOrElseRunOnFailure" time="0.001"/>
  <testcase classname="javaslang.control.TryTest" name="shouldFlatMapWithExceptionOnFailure" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldDetectSuccess" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldReturnElseWhenOrElseOnFailure" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldConvertListOfSuccessToTryOfList" time="0.001"/>
  <testcase classname="javaslang.control.TryTest" name="shouldHashFailure" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldFilterWithExceptionOnFailure" time="0.001"/>
  <testcase classname="javaslang.control.TryTest" name="shouldNotHoldPropertyExistsWhenPredicateThrows" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldEqualFailureIfObjectIsSame" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldReturnNewFailureWhenCallingOnFailureAndThrowingGivenFailure" time="0.001"/>
  <testcase classname="javaslang.control.TryTest" name="shouldChainConsumableSuccessWithAndThen" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldFilterNonMatchingPredicateOnSuccess" time="0.001"/>
  <testcase classname="javaslang.control.TryTest" name="shouldThrowWhenCallingGetCauseOnSuccess" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldReturnHashCodeOnFatal" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldDetectNonSuccessOnFailure" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldConvertListOfMixedTryToTryOfList" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldOrElseThrowOnSuccess" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldNotEqualFailureIfObjectIsNull" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldRecoverWithOnFailure" time="0.001"/>
  <testcase classname="javaslang.control.TryTest" name="shouldOrElseRunOnSuccess" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldPassThroughFatalException" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldForEachOnFailure" time="0.001"/>
  <testcase classname="javaslang.control.TryTest" name="shouldReturnIdentityWhenFilterTryOnFailure" time="0.004"/>
  <testcase classname="javaslang.control.TryTest" name="shouldComposeFailureWithAndThenWhenFailing" time="0.001"/>
  <testcase classname="javaslang.control.TryTest" name="shouldMapWithExceptionOnFailure" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldCreateFailureOnNonFatalException" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldDetectSuccessOfRunnable" time="0.003"/>
  <testcase classname="javaslang.control.TryTest" name="shouldThrowWhenGetOnFailure" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldOrElseGetOnSuccess" time="0.001"/>
  <testcase classname="javaslang.control.TryTest" name="shouldReturnElseWhenOrElseGetOnFailure" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldEnsureThatIdentityCheckedFunctionReturnsIdentity" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldDetectFailureOfRunnable" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldReturnIteratorOfSuccess" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldFilterNonMatchingPredicateOnFailure" time="0.001"/>
  <testcase classname="javaslang.control.TryTest" name="shouldRecoverOnSuccess" time="0.007"/>
  <testcase classname="javaslang.control.TryTest" name="shouldReturnAndNotThrowOnNonFatal" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldGetOnSuccess" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldConsumeThrowableWhenCallingOnFailureGivenFailure" time="0.001"/>
  <testcase classname="javaslang.control.TryTest" name="shouldThrowWhenCallingFailedOnSuccess" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldNotHoldPropertyForAllWhenPredicateThrows" time="0.001"/>
  <testcase classname="javaslang.control.TryTest" name="shouldThrowOtherWhenOrElseThrowOnFailure" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldMapOnSuccess" time="0.001"/>
  <testcase classname="javaslang.control.TryTest" name="shouldOrElseOnSuccess" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldFilterTryMatchingPredicateOnSuccess" time="0.001"/>
  <testcase classname="javaslang.control.TryTest" name="shouldSubsequentlyHandOverCause" time="0.002"/>
  <testcase classname="javaslang.control.TryTest" name="shouldNotConsumeThrowableWhenCallingOnFailureGivenSuccess" time="0.001"/>
  <testcase classname="javaslang.control.TryTest" name="shouldReturnToStringOnFatal" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldFilterMatchingPredicateOnSuccess" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldPeekSuccess" time="0.001"/>
  <testcase classname="javaslang.control.TryTest" name="shouldReturnIteratorOfFailure" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldRecoverOnFailure" time="0"/>
  <testcase classname="javaslang.control.TryTest" name="shouldComposeSuccessWithAndThenWhenFailing" time="0"/>
</testsuite>
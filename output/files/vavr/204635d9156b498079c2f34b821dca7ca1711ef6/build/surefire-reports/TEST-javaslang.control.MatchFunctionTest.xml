<?xml version="1.0" encoding="UTF-8" ?>
<testsuite tests="90" failures="0" name="javaslang.control.MatchFunctionTest" time="0.158" errors="0" skipped="0">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-oracle/jre/lib/amd64"/>
    <property name="java.vm.version" value="25.151-b12"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="/home/travis/build/rafaresearch/vavr"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/home/travis/build/rafaresearch/vavr"/>
    <property name="java.runtime.version" value="1.8.0_151-b12"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-oracle/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/usr/local/maven-3.5.2/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="maven.conf" value="/usr/local/maven-3.5.2/conf"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="4.4.0-101-generic"/>
    <property name="library.jansi.path" value="/usr/local/maven-3.5.2/lib/jansi-native"/>
    <property name="user.home" value="/home/travis"/>
    <property name="user.timezone" value="UTC"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="user.name" value="travis"/>
    <property name="java.class.path" value="/usr/local/maven-3.5.2/boot/plexus-classworlds-2.5.2.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/lib/jvm/java-8-oracle/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher package"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_151"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/usr/local/maven-3.5.2"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldTransportMatchedValueIn" time="0.025"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldAllowToDefineRunnableAsDefaultCase" time="0.006"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchTypedResultByValueIn" time="0"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchDefaultCaseHavingFunction" time="0.004"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchSuperTypeByPredicate" time="0.012"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldApplyThenThrowFunctionWhenMatched" time="0.002"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchSuperTypeByValue" time="0.001"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldThrowWhenMatchDefaultCaseAndExceptionSupplierIsNull" time="0"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchSubTypeByFunction" time="0.008"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldNotApplyThenSupplierWhenUnmatched" time="0.002"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldNotConsumeWhenNoMatchFoundAnoNoDefaultCase" time="0.007"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchEvenIntByPredicate" time="0.004"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldTransportMatchedValue" time="0"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchTypedResultByTypeNegativeCase" time="0"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldApplyThenFunctionWhenMatched" time="0.002"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldTransportUnmatchedType" time="0"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchSubTypeByValue" time="0.003"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldPerformActionWhenOtherwiseRunAndConsumerIsNotNull" time="0.002"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldTransportMatchedTypeIn" time="0.008"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchNumberByTypeIn" time="0.001"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchNumberByType" time="0.001"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchNullByValueIn" time="0"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchTypedResultByFunctionThenThrow" time="0.003"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldThrowWhenMatchNullVarargsByPredicate" time="0"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchSubTypeByType" time="0"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldTransportUnmatchedPredicate" time="0.003"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldThrowWhenMatchDefaultCaseAndFunctionIsNull" time="0"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchDefaultCaseHavingExceptionSupplier" time="0.001"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldThrowWhenMatchNullVarargsByTypeIn" time="0"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldThrowWhenMatchNullVarargsByValueIn" time="0"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchDefaultCaseHavingSupplier" time="0.002"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchTypedResultByFunctionNegativeCase" time="0.001"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldNotApplyThenFunctionWhenUnmatched" time="0.001"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldHandleOtherwiseFunctionOfUnmatched" time="0.001"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchTypedResultByPredicateNegativeCase" time="0.001"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchNullByValue" time="0"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldThrowLateWhenMultipleCases" time="0"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldNotApplyFunctionWhenApplicableUnmatched" time="0"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchSuperTypeByValueIn" time="0"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldRunConsumerWhenMatchedAsFunction" time="0.002"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchTypedResultByFunction" time="0.002"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchTypedResultByValueInNegativeCase" time="0.001"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchSuperTypeByType" time="0"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldPerformActionWhenOtherwiseRunAndRunnableIsNotNull" time="0.001"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchIntByValue" time="0"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchSubTypeByPredicate" time="0.001"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldApplyThenValueWhenMatched" time="0"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldRunRunnableWhenMatchedAsFunction" time="0"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldApplyFunctionWhenApplicableMatched" time="0.001"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldThrowWhenMatchDefaultCaseAndSupplierIsNull" time="0"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchTypedResultByPredicate" time="0.001"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchIntByFunction" time="0.001"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchSuperTypeByTypeIn" time="0.004"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldThrowOnOtherwiseRunWhenRunnableIsNull" time="0"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldNotRunRunnableWhenUnmatchedAsFunction" time="0.003"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchSuperTypeByFunction" time="0.001"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldHandleOtherwiseThrowOfUnmatched" time="0.001"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldApplyThenSupplierWhenMatched" time="0.001"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldHandleOtherwiseSupplierOfMatched" time="0.001"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldNotApplyThenThrowFunctionWhenUnmatched" time="0.002"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldHandleOtherwiseValueOfMatched" time="0.001"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchIntByValueIn" time="0"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldTransportUnmatchedValueIn" time="0"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchSubTypeByTypeIn" time="0.001"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldAllowToDefineRunnableAsMatchingAction" time="0.009"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldHandleOtherwiseValueOfUnmatched" time="0"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchTypedResultByType" time="0"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchSubTypeByValueIn" time="0.004"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldConsumeFirstMatchingCase" time="0.002"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldTransportMatchedPredicate" time="0.001"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchDefaultCaseHavingValue" time="0.001"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldTransportMatchedType" time="0"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldConsumeDefaultCaseWhenNoMatchFound" time="0.001"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldNotRunConsumerWhenUnmatchedAsFunction" time="0.001"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchIntByMatcher" time="0.002"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchTypedResultByFunctionThenThrowNegativeCase" time="0.003"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchTypedResultByValueNegativeCase" time="0"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldHandleOtherwiseFunctionOfMatched" time="0.001"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldTransportUnmatchedValue" time="0"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldNotApplyThenValueWhenUnmatched" time="0"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldHandleOtherwiseSupplierOfUnmatched" time="0.001"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldTransportUnmatchedTypeIn" time="0.001"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldTransportMatchedFunction" time="0.002"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldTransportUnmatchedFunction" time="0.002"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldThrowWhenMatchNullByType" time="0"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchTypedResultByValue" time="0"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldMatchIntByValueAndThenThrow" time="0"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldThrowLate" time="0.001"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldThrowWhenMatchNullByFunction" time="0"/>
  <testcase classname="javaslang.control.MatchFunctionTest" name="shouldThrowOnOtherwiseRunWhenConsumerIsNull" time="0"/>
</testsuite>